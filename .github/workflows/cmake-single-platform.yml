# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  macos:
    runs-on: macos-13
    steps:
    - uses: actions/checkout@v4

    - name: Install libtool on macOS
      run: brew install libtool

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: ./mk

    - name: Rename Binary
      run: mv ${{ github.workspace }}/build/tri-pp ${{ github.workspace }}/tri-pp-macos-13

    - name: Create Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')  
      with:
        files: ${{ github.workspace }}/tri-pp-macos-13
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ubuntu:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v4

    - name: Install libtool
      run: |
        sudo apt-get update
        sudo apt-get install libtool-bin

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: ./mk

    - name: Rename Binary
      run: mv ${{ github.workspace }}/build/tri-pp ${{ github.workspace }}/tri-pp-ubuntu-20.04

    - name: Create Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')  
      # Release will only happen if triggered by a tag
      # Example: git tag v1.0.0
      #          git push origin v1.0.0
      with:
        files: ${{ github.workspace }}/tri-pp-ubuntu-20.04
        generate_release_notes: true

      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
